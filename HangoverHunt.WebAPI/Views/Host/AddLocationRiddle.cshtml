@{
    ViewBag.Title = "AddLocationRiddle";
}
 <style>
     .text-field
     {
         width:150px;
         color:red;
     }
 </style>
 <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBhWznFPIb9w3oI2WwXqkh6hYxaHp2jm80&sensor=false">
 </script>
  <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js"></script>
  <link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/themes/base/jquery-ui.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript">
      function initialize() {
        var mapOptions = {
          center: new google.maps.LatLng(-34.397, 150.644),
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("map_canvas"),
            mapOptions);
      }

      var geocoder = new google.maps.Geocoder();
      var map, lat, lng;

      $(function() {

          initialize();

          $("#location").autocomplete({
         
              source: function(request, response) {

                  if (geocoder == null){
                      geocoder = new google.maps.Geocoder();
                  }
                  geocoder.geocode( {'address': request.term }, function(results, status) {
                      if (status == google.maps.GeocoderStatus.OK) {

                          var searchLoc = results[0].geometry.location;
                          lat = results[0].geometry.location.lat();
                          lng = results[0].geometry.location.lng();
                          var latlng = new google.maps.LatLng(lat, lng);
                          var bounds = results[0].geometry.bounds;

                          geocoder.geocode({'latLng': latlng}, function(results1, status1) {
                              if (status1 == google.maps.GeocoderStatus.OK) {
                                  if (results1[1]) {
                                      response($.map(results1, function(loc) {
                                          return {
                                              label  : loc.formatted_address,
                                              value  : loc.formatted_address,
                                              bounds   : loc.geometry.bounds
                                          }
                                      }));
                                  }
                              }
                          });
                      }
                  });
              },
              select: function(event,ui){
                  var pos = ui.item.position;
                  var lct = ui.item.locType;
                  var bounds = ui.item.bounds;

                  if (bounds){
                      map.setCenter(lat, lng);
                  }

                  $('#geo-location').val(lat + ',' + lng);
              }
          });
      }); 
    </script>

<h2>AddLocationRiddle</h2>
@using (Html.BeginForm("AddLocationRiddle", "Host"))
{
    <fieldset>
        <legend>Add location riddle</legend>
        <label for="exact-question">Question:</label>
        <input type="text" id="exact-question" name="question" />    
        <br />
        <label for="location">Location:</label>
        <input type="text" id="location" name="location"/>  
        <div id="map_canvas" style="width:350px; height:400px"></div>
        <br />
        <input type="submit" value="Add Riddle"/>
    </fieldset>
    
    <input type="hidden" id="geo-location" />
}


